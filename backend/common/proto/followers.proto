syntax = "proto3";

package proto;
import "google/api/annotations.proto";

option go_package = "github.com/xws2021-nistagram/common/proto";

service Followers {

    rpc CreateUserConnection (CreateFollowerRequest) returns (EmptyResponseFollowers) {
        option(google.api.http) = {
            post: "/api/followers/create_connection",
            body: "*"
        };
    }

    rpc GetAllFollowers (CreateUserRequestFollowers) returns (CreateUserResponse) {
        option(google.api.http) = {
            post: "/api/followers/get_followers",
            body: "user"
        };
    }

    rpc CreateUser (CreateUserRequestFollowers) returns (EmptyResponseFollowers){
        option(google.api.http) = {
            post: "/api/followers",
            body: "user"
        };
    }

    rpc DeleteDirectedConnection (CreateFollowerRequest) returns (EmptyResponseFollowers){
        option(google.api.http) = {
            post: "/api/followers/delete_directed",
            body: "follower"
        };
    }

    rpc DeleteBiDirectedConnection (CreateFollowerRequest) returns (EmptyResponseFollowers){
        option(google.api.http) = {
            post: "/api/followers/delete_biDirected",
            body: "follower"
        };
    }

    rpc GetAllFollowing (CreateUserRequestFollowers) returns (CreateUserResponse) {
        option(google.api.http) = {
            post: "/api/followers/get_followings",
            body: "user"
        };
    }

    rpc GetAllFollowingsForHomepagePosts (CreateUserRequestFollowers) returns (CreateUserResponse) {
        option(google.api.http) = {
            post: "/api/followers/get_followings/posts",
            body: "user"
        };
    }

    rpc GetAllFollowingsForHomepageStories (CreateUserRequestFollowers) returns (CreateUserResponse) {
        option(google.api.http) = {
            post: "/api/followers/get_followings/stories",
            body: "user"
        };
    }

    rpc UpdateUserConnection (CreateFollowerRequest) returns (CreateFollowerResponse) {
        option(google.api.http) = {
            post: "/api/followers/update_follower",
            body: "follower"
        };
    }

    rpc GetFollowersConnection (Follower) returns (Follower) {
        option(google.api.http) = {
            post: "/api/followers/connection",
            body: "*"
        };
    }
}

message Follower {
    string userId = 1;
    string followerId = 2;
    bool isMuted = 3;
    bool isCloseFriends = 4;
    bool isApprovedRequest = 5;
    bool isNotificationEnabled = 6;
}

message UserFollowers {
    string UserId = 1;
}

message CreateUserRequestFollowers {
    UserFollowers user = 1;
}

message CreateUserResponse {
    repeated UserFollowers users = 1;
}

message CreateFollowerResponse {
    Follower follower = 1;
}

message  CreateFollowerRequest {
    Follower follower = 1;
}

message EmptyResponseFollowers {}