syntax = "proto3";

package protoe;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/xws2021-nistagram/content_service/proto";

service Content {
  /*    Posts    */
  rpc CreatePost (Post) returns (EmptyResponse) {
    option(google.api.http) = {
      post: "/posts",
      body: "*"
    };
  }

  rpc GetAllPosts (EmptyRequest) returns (ReducedPostArray) {
    option(google.api.http) = {
      get: "/posts"
    };
  }

  rpc RemovePost (RequestId) returns (EmptyResponse) {
    option(google.api.http) = {
      delete: "/posts/{id}"
    };
  }

  rpc GetPostById (RequestId) returns (Post) {
    option(google.api.http) = {
      get: "/posts/{id}"
    };
  }

  rpc SearchContentByLocation (SearchLocationRequest) returns (ReducedPostArray) {
    option(google.api.http) = {
      post: "/location",
      body: "*"
    };
  }
  /* * * * * * * * * * * * */

  /*    Comments    */
  rpc CreateComment (Comment) returns (EmptyResponse) {
    option(google.api.http) = {
      post: "/comments",
      body: "*"
    };
  }

  rpc GetCommentsForPost (RequestId) returns (CommentsArray) {
    option(google.api.http) = {
      get: "/comments/{id}"
    };
  }
  /* * * * * * * * * * * * */

  /* Likes & Dislikes */
  rpc CreateLike (Like) returns (EmptyResponse) {
    option(google.api.http) = {
      post: "/likes",
      body: "*"
    };
  }

  rpc GetLikesForPost (RequestId) returns (LikesArray) {
    option(google.api.http) = {
      get: "/likes/{id}"
    };
  }

  rpc GetDislikesForPost (RequestId) returns (LikesArray) {
    option(google.api.http) = {
      get: "/dislikes/{id}"
    };
  }
  /* * * * * * * * * * * * */

  /* Collections & Favorites */
  rpc GetAllCollections (RequestId) returns (CollectionsArray) {
    option(google.api.http) = {
      get: "/collections/user/{id}"
    };
  }

  rpc GetCollection (RequestId) returns (Collection) {
    option(google.api.http) = {
      get: "/collections/{id}"
    };
  }

  rpc CreateCollection (Collection) returns (EmptyResponse) {
    option(google.api.http) = {
      post: "/collections",
      body: "*"
    };
  }

  rpc RemoveCollection (RequestId) returns (EmptyResponse) {
    option(google.api.http) = {
      delete: "/collections/{id}"
    };
  }

  rpc GetUserFavorites (RequestId) returns (Favorites) {
    option(google.api.http) = {
      get: "/favorites/{id}"
    };
  }

  rpc CreateFavorite (FavoritesRequest) returns (EmptyResponse) {
    option(google.api.http) = {
      post: "/favorites/create",
      body: "*"
    };
  }

  rpc RemoveFavorite (FavoritesRequest) returns (EmptyResponse) {
    option(google.api.http) = {
      post: "/favorites/delete",
      body: "*"
    };
  }
  /* * * * * * * * * * * * */

  /* Hashtags */
  rpc CreateHashtag (Hashtag) returns (Hashtag) {
    option(google.api.http) = {
      post: "/hashtag/create",
      body: "*"
    };
  }
}

/*    Posts    */
message Post {
  string id = 1;
  string userId = 2;
  bool isAd = 3;
  string type = 4;
  string description = 5;
  string location = 6;
  google.protobuf.Timestamp createdAt = 7;
  repeated Media media = 8;
  repeated Comment comments = 9;
  repeated Like likes = 10;
  repeated Like dislikes = 11;
}

// Used for basic preview of posts, comments and likes/dislikes will be fetched on request
message ReducedPost {
  string id = 1;
  string userId = 2;
  bool isAd = 3;
  string type = 4;
  string description = 5;
  string location = 6;
  google.protobuf.Timestamp createdAt = 7;
  repeated Media media = 8;
  int32 commentsNum = 9;
  int32 likesNum = 10;
  int32 dislikesNum = 11;
}

message Media {
  string id = 1;
  string type = 2;
  string postId = 3;
  string content = 4;
  int32 orderNum = 5;
  repeated Tag tags = 6;
}

message Tag {
  string mediaId = 1;
  string userId = 2;
  string username = 3;
}

message Hashtag {
  string id = 1;
  string text = 2;
}

message ReducedPostArray {
  repeated ReducedPost posts = 1;
}

message PostArray {
  repeated Post posts = 1;
}
/* * * * * * * * * * * * */

/*    Stories    */
message Story {
  string id = 1;
  string userId = 2;
  bool isAd = 3;
  string type = 4;
  string description = 5;
  string location = 6;
  google.protobuf.Timestamp createdAt = 7;
  repeated Media media = 8;
  bool isCloseFriends = 9;
}

message Highlight {
  string id = 1;
  string name = 2;
  repeated Story stories = 3;
}

message StoryArray {
  repeated Story stories = 1;
}
/* * * * * * * * * * * * */

/* Collections & Favorites */
message Collection {
  string id = 1;
  string name = 2;
  string userId = 3;
  repeated ReducedPost posts = 4;
}

message Favorites {
  string userId = 1;
  repeated Collection collections = 2;
  repeated ReducedPost unclassified = 3;
}

message FavoritesRequest {
  string userId = 1;
  string postId = 2;
  string collectionId = 3;
}

message CollectionsArray {
  repeated Collection collections = 1;
}
/* * * * * * * * * * * * */

/*    Likes    */
message Like {
  string postId = 1;
  string userId = 2;
  bool isLike = 3;
}

message LikesArray {
  repeated Like likes = 1;
}
/* * * * * * * * * * * * */

/*    Comments    */
message Comment {
  string id = 1;
  string postId = 2;
  string userId = 3;
  string username = 4;
  string content = 5;
  google.protobuf.Timestamp createdAt = 6;
}

message CommentsArray {
  repeated Comment comments = 1;
}
/* * * * * * * * * * * * */

/*    Multi-usage messages    */
message RequestId {
  string id = 1;
}

message SearchLocationRequest {
  string location = 1;
}

message EmptyRequest {}
message EmptyResponse {}
/* * * * * * * * * * * * */
