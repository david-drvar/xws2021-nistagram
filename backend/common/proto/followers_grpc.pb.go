// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FollowersClient is the client API for Followers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FollowersClient interface {
	CreateUserConnection(ctx context.Context, in *CreateFollowerRequest, opts ...grpc.CallOption) (*EmptyResponseFollowers, error)
	GetAllFollowers(ctx context.Context, in *CreateUserRequestFollowers, opts ...grpc.CallOption) (*CreateUserResponse, error)
	CreateUser(ctx context.Context, in *CreateUserRequestFollowers, opts ...grpc.CallOption) (*EmptyResponseFollowers, error)
	DeleteDirectedConnection(ctx context.Context, in *CreateFollowerRequest, opts ...grpc.CallOption) (*EmptyResponseFollowers, error)
	DeleteBiDirectedConnection(ctx context.Context, in *CreateFollowerRequest, opts ...grpc.CallOption) (*EmptyResponseFollowers, error)
	GetAllFollowing(ctx context.Context, in *CreateUserRequestFollowers, opts ...grpc.CallOption) (*CreateUserResponse, error)
	GetAllFollowingsForHomepagePosts(ctx context.Context, in *CreateUserRequestFollowers, opts ...grpc.CallOption) (*CreateUserResponse, error)
	GetAllFollowingsForHomepageStories(ctx context.Context, in *CreateUserRequestFollowers, opts ...grpc.CallOption) (*CreateUserResponse, error)
	UpdateUserConnection(ctx context.Context, in *CreateFollowerRequest, opts ...grpc.CallOption) (*CreateFollowerResponse, error)
	GetFollowersConnection(ctx context.Context, in *Follower, opts ...grpc.CallOption) (*Follower, error)
}

type followersClient struct {
	cc grpc.ClientConnInterface
}

func NewFollowersClient(cc grpc.ClientConnInterface) FollowersClient {
	return &followersClient{cc}
}

func (c *followersClient) CreateUserConnection(ctx context.Context, in *CreateFollowerRequest, opts ...grpc.CallOption) (*EmptyResponseFollowers, error) {
	out := new(EmptyResponseFollowers)
	err := c.cc.Invoke(ctx, "/proto.Followers/CreateUserConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *followersClient) GetAllFollowers(ctx context.Context, in *CreateUserRequestFollowers, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, "/proto.Followers/GetAllFollowers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *followersClient) CreateUser(ctx context.Context, in *CreateUserRequestFollowers, opts ...grpc.CallOption) (*EmptyResponseFollowers, error) {
	out := new(EmptyResponseFollowers)
	err := c.cc.Invoke(ctx, "/proto.Followers/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *followersClient) DeleteDirectedConnection(ctx context.Context, in *CreateFollowerRequest, opts ...grpc.CallOption) (*EmptyResponseFollowers, error) {
	out := new(EmptyResponseFollowers)
	err := c.cc.Invoke(ctx, "/proto.Followers/DeleteDirectedConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *followersClient) DeleteBiDirectedConnection(ctx context.Context, in *CreateFollowerRequest, opts ...grpc.CallOption) (*EmptyResponseFollowers, error) {
	out := new(EmptyResponseFollowers)
	err := c.cc.Invoke(ctx, "/proto.Followers/DeleteBiDirectedConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *followersClient) GetAllFollowing(ctx context.Context, in *CreateUserRequestFollowers, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, "/proto.Followers/GetAllFollowing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *followersClient) GetAllFollowingsForHomepagePosts(ctx context.Context, in *CreateUserRequestFollowers, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, "/proto.Followers/GetAllFollowingsForHomepagePosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *followersClient) GetAllFollowingsForHomepageStories(ctx context.Context, in *CreateUserRequestFollowers, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, "/proto.Followers/GetAllFollowingsForHomepageStories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *followersClient) UpdateUserConnection(ctx context.Context, in *CreateFollowerRequest, opts ...grpc.CallOption) (*CreateFollowerResponse, error) {
	out := new(CreateFollowerResponse)
	err := c.cc.Invoke(ctx, "/proto.Followers/UpdateUserConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *followersClient) GetFollowersConnection(ctx context.Context, in *Follower, opts ...grpc.CallOption) (*Follower, error) {
	out := new(Follower)
	err := c.cc.Invoke(ctx, "/proto.Followers/GetFollowersConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FollowersServer is the server API for Followers service.
// All implementations must embed UnimplementedFollowersServer
// for forward compatibility
type FollowersServer interface {
	CreateUserConnection(context.Context, *CreateFollowerRequest) (*EmptyResponseFollowers, error)
	GetAllFollowers(context.Context, *CreateUserRequestFollowers) (*CreateUserResponse, error)
	CreateUser(context.Context, *CreateUserRequestFollowers) (*EmptyResponseFollowers, error)
	DeleteDirectedConnection(context.Context, *CreateFollowerRequest) (*EmptyResponseFollowers, error)
	DeleteBiDirectedConnection(context.Context, *CreateFollowerRequest) (*EmptyResponseFollowers, error)
	GetAllFollowing(context.Context, *CreateUserRequestFollowers) (*CreateUserResponse, error)
	GetAllFollowingsForHomepagePosts(context.Context, *CreateUserRequestFollowers) (*CreateUserResponse, error)
	GetAllFollowingsForHomepageStories(context.Context, *CreateUserRequestFollowers) (*CreateUserResponse, error)
	UpdateUserConnection(context.Context, *CreateFollowerRequest) (*CreateFollowerResponse, error)
	GetFollowersConnection(context.Context, *Follower) (*Follower, error)
	mustEmbedUnimplementedFollowersServer()
}

// UnimplementedFollowersServer must be embedded to have forward compatible implementations.
type UnimplementedFollowersServer struct {
}

func (UnimplementedFollowersServer) CreateUserConnection(context.Context, *CreateFollowerRequest) (*EmptyResponseFollowers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserConnection not implemented")
}
func (UnimplementedFollowersServer) GetAllFollowers(context.Context, *CreateUserRequestFollowers) (*CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllFollowers not implemented")
}
func (UnimplementedFollowersServer) CreateUser(context.Context, *CreateUserRequestFollowers) (*EmptyResponseFollowers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (UnimplementedFollowersServer) DeleteDirectedConnection(context.Context, *CreateFollowerRequest) (*EmptyResponseFollowers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDirectedConnection not implemented")
}
func (UnimplementedFollowersServer) DeleteBiDirectedConnection(context.Context, *CreateFollowerRequest) (*EmptyResponseFollowers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBiDirectedConnection not implemented")
}
func (UnimplementedFollowersServer) GetAllFollowing(context.Context, *CreateUserRequestFollowers) (*CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllFollowing not implemented")
}
func (UnimplementedFollowersServer) GetAllFollowingsForHomepagePosts(context.Context, *CreateUserRequestFollowers) (*CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllFollowingsForHomepagePosts not implemented")
}
func (UnimplementedFollowersServer) GetAllFollowingsForHomepageStories(context.Context, *CreateUserRequestFollowers) (*CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllFollowingsForHomepageStories not implemented")
}
func (UnimplementedFollowersServer) UpdateUserConnection(context.Context, *CreateFollowerRequest) (*CreateFollowerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserConnection not implemented")
}
func (UnimplementedFollowersServer) GetFollowersConnection(context.Context, *Follower) (*Follower, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowersConnection not implemented")
}
func (UnimplementedFollowersServer) mustEmbedUnimplementedFollowersServer() {}

// UnsafeFollowersServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FollowersServer will
// result in compilation errors.
type UnsafeFollowersServer interface {
	mustEmbedUnimplementedFollowersServer()
}

func RegisterFollowersServer(s grpc.ServiceRegistrar, srv FollowersServer) {
	s.RegisterService(&Followers_ServiceDesc, srv)
}

func _Followers_CreateUserConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFollowerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FollowersServer).CreateUserConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Followers/CreateUserConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FollowersServer).CreateUserConnection(ctx, req.(*CreateFollowerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Followers_GetAllFollowers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequestFollowers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FollowersServer).GetAllFollowers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Followers/GetAllFollowers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FollowersServer).GetAllFollowers(ctx, req.(*CreateUserRequestFollowers))
	}
	return interceptor(ctx, in, info, handler)
}

func _Followers_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequestFollowers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FollowersServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Followers/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FollowersServer).CreateUser(ctx, req.(*CreateUserRequestFollowers))
	}
	return interceptor(ctx, in, info, handler)
}

func _Followers_DeleteDirectedConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFollowerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FollowersServer).DeleteDirectedConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Followers/DeleteDirectedConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FollowersServer).DeleteDirectedConnection(ctx, req.(*CreateFollowerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Followers_DeleteBiDirectedConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFollowerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FollowersServer).DeleteBiDirectedConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Followers/DeleteBiDirectedConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FollowersServer).DeleteBiDirectedConnection(ctx, req.(*CreateFollowerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Followers_GetAllFollowing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequestFollowers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FollowersServer).GetAllFollowing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Followers/GetAllFollowing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FollowersServer).GetAllFollowing(ctx, req.(*CreateUserRequestFollowers))
	}
	return interceptor(ctx, in, info, handler)
}

func _Followers_GetAllFollowingsForHomepagePosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequestFollowers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FollowersServer).GetAllFollowingsForHomepagePosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Followers/GetAllFollowingsForHomepagePosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FollowersServer).GetAllFollowingsForHomepagePosts(ctx, req.(*CreateUserRequestFollowers))
	}
	return interceptor(ctx, in, info, handler)
}

func _Followers_GetAllFollowingsForHomepageStories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequestFollowers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FollowersServer).GetAllFollowingsForHomepageStories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Followers/GetAllFollowingsForHomepageStories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FollowersServer).GetAllFollowingsForHomepageStories(ctx, req.(*CreateUserRequestFollowers))
	}
	return interceptor(ctx, in, info, handler)
}

func _Followers_UpdateUserConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFollowerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FollowersServer).UpdateUserConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Followers/UpdateUserConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FollowersServer).UpdateUserConnection(ctx, req.(*CreateFollowerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Followers_GetFollowersConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Follower)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FollowersServer).GetFollowersConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Followers/GetFollowersConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FollowersServer).GetFollowersConnection(ctx, req.(*Follower))
	}
	return interceptor(ctx, in, info, handler)
}

// Followers_ServiceDesc is the grpc.ServiceDesc for Followers service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Followers_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Followers",
	HandlerType: (*FollowersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUserConnection",
			Handler:    _Followers_CreateUserConnection_Handler,
		},
		{
			MethodName: "GetAllFollowers",
			Handler:    _Followers_GetAllFollowers_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _Followers_CreateUser_Handler,
		},
		{
			MethodName: "DeleteDirectedConnection",
			Handler:    _Followers_DeleteDirectedConnection_Handler,
		},
		{
			MethodName: "DeleteBiDirectedConnection",
			Handler:    _Followers_DeleteBiDirectedConnection_Handler,
		},
		{
			MethodName: "GetAllFollowing",
			Handler:    _Followers_GetAllFollowing_Handler,
		},
		{
			MethodName: "GetAllFollowingsForHomepagePosts",
			Handler:    _Followers_GetAllFollowingsForHomepagePosts_Handler,
		},
		{
			MethodName: "GetAllFollowingsForHomepageStories",
			Handler:    _Followers_GetAllFollowingsForHomepageStories_Handler,
		},
		{
			MethodName: "UpdateUserConnection",
			Handler:    _Followers_UpdateUserConnection_Handler,
		},
		{
			MethodName: "GetFollowersConnection",
			Handler:    _Followers_GetFollowersConnection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "followers.proto",
}
